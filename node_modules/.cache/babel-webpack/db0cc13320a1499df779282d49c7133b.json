{"ast":null,"code":"import { D, W, Y } from '../../constant';\nvar isoWeekPrettyUnit = 'isoweek';\nexport default (function (o, c, d) {\n  var getYearFirstThursday = function getYearFirstThursday(year, isUtc) {\n    var yearFirstDay = (isUtc ? d.utc : d)().year(year).startOf(Y);\n    var addDiffDays = 4 - yearFirstDay.isoWeekday();\n\n    if (yearFirstDay.isoWeekday() > 4) {\n      addDiffDays += 7;\n    }\n\n    return yearFirstDay.add(addDiffDays, D);\n  };\n\n  var getCurrentWeekThursday = function getCurrentWeekThursday(ins) {\n    return ins.add(4 - ins.isoWeekday(), D);\n  };\n\n  var proto = c.prototype;\n\n  proto.isoWeekYear = function () {\n    var nowWeekThursday = getCurrentWeekThursday(this);\n    return nowWeekThursday.year();\n  };\n\n  proto.isoWeek = function (week) {\n    if (!this.$utils().u(week)) {\n      return this.add((week - this.isoWeek()) * 7, D);\n    }\n\n    var nowWeekThursday = getCurrentWeekThursday(this);\n    var diffWeekThursday = getYearFirstThursday(this.isoWeekYear(), this.$u);\n    return nowWeekThursday.diff(diffWeekThursday, W) + 1;\n  };\n\n  proto.isoWeekday = function (week) {\n    if (!this.$utils().u(week)) {\n      return this.day(this.day() % 7 ? week : week - 7);\n    }\n\n    return this.day() || 7;\n  };\n\n  var oldStartOf = proto.startOf;\n\n  proto.startOf = function (units, startOf) {\n    var utils = this.$utils();\n    var isStartOf = !utils.u(startOf) ? startOf : true;\n    var unit = utils.p(units);\n\n    if (unit === isoWeekPrettyUnit) {\n      return isStartOf ? this.date(this.date() - (this.isoWeekday() - 1)).startOf('day') : this.date(this.date() - 1 - (this.isoWeekday() - 1) + 7).endOf('day');\n    }\n\n    return oldStartOf.bind(this)(units, startOf);\n  };\n});","map":null,"metadata":{},"sourceType":"module"}